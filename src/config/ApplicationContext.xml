<?xml version="1.0" encoding="UTF-8"?>
<!--本示例采用DBCP连接池，应预先把DBCP的jar包复制到工程的lib目录下。 --> 
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/aop 
	http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
	http://www.springframework.org/schema/tx
	http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
	http://www.springframework.org/schema/context 
	http://www.springframework.org/schema/context/spring-context-3.0.xsd">

     <!-- 属性文件 --> 
    <context:property-placeholder location="classpath:sybase.properties" />
     <!-- 数据源        p:initialSize="20"
        p:maxActive="100"
        p:maxIdle="30"
        p:maxWait="1000"
        p:poolPreparedStatements="true"-->    
    <bean id="dataSource" destroy-method="close"
		class="org.apache.commons.dbcp.BasicDataSource"
        p:driverClassName="${jdbc.driverClassName}"
        p:url="${jdbc.url}" 
        p:username="${jdbc.username}" 
        p:password="${jdbc.password}"
        p:defaultAutoCommit="true"
        p:initialSize="20"
        p:maxActive="100"
        p:maxIdle="30"
        p:maxWait="1000"
        p:poolPreparedStatements="true">
     </bean>

    
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
      <property name="dataSource" ref="dataSource" />
    </bean>
 
    
   <!-- sqlSessionFactory --> 
  <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean"> 
     <!--dataSource属性指定要用到的连接池--> 
     <property name="dataSource" ref="dataSource"/> 
     <!--configLocation属性指定mybatis的核心配置文件--> 
     <property name="configLocation" value="classpath:Configuration.xml" /> 
     <!-- 所有配置的mapper文件 -->
     <property name="mapperLocations" value="classpath*:com/gtafe/mapper/*.xml" />
  </bean> 
  
  <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
     <property name="basePackage" value="com.gtafe.dao" />       
  </bean>

    <!-- 扫描com这个包里的所有类，把里面配上相应注解的类全都放在容器中进行管理 -->
    <context:component-scan base-package="com.gtafe"/>

    <!-- 事务注解驱动加载 -->
    <tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true"/>

    <!--注解配置，告诉spring用哪个实现类，注解到这个bean中-->
 <!--<bean id = "userMapper" class="com.gtafe.dao.UserMapper"/>-->
 <bean id = "userService" class = "com.gtafe.service.impl.UserServiceImpl"/>
 <bean id="irs" class="com.gtafe.service.impl.ExchangeRateServiceImpl" />
 <bean id="psi" class="com.gtafe.service.impl.PiffrtServiceImpl" />
 <!--<bean id = "userMapper" class="com.gtafe.dao.UserMapper"/>-->
 </beans>

